{"id":"js/helpers.js","dependencies":[{"name":"/Users/Narendras/Documents/Projects/finance-app-v2/package.json","includedInParent":true,"mtime":1544491045311}],"generated":{"js":"'use strict';\n/**\n * Render function that renders data specified in the param\n * to the given target node. A templateID corresponding to\n * the appearance of the dom node should be passed as well as\n * an individual render function that renders an individual node.\n * \n * @param {Array} data array of elements to render\n * @param {Node} target target node to append the results to\n * @param {String} templateID the id of the template to pass\n *                            to individual render function\n * @param {Function} renderFn callback function. Given:\n *                          - Data element\n *                          - HTML template\n *                          Should return the finished DOM node\n *                          populated by the data defined in the\n *                          data element.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.render = render;\n\nfunction render(data, target, templateID, renderFn) {\n  var template = document.getElementById(templateID);\n\n  if (data.constructor === Array) {\n    data.forEach(function (el) {\n      var result = renderFn(el, template);\n      target.appendChild(result);\n    });\n  } else {\n    var result = renderFn(data, template);\n    target.appendChild(result);\n  }\n}","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"js/helpers.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"js/helpers.js","original":{"line":3,"column":0}},{"generated":{"line":25,"column":0},"source":"js/helpers.js","original":{"line":20,"column":0}},{"name":"render","generated":{"line":25,"column":9},"source":"js/helpers.js","original":{"line":20,"column":9}},{"generated":{"line":25,"column":15},"source":"js/helpers.js","original":{"line":20,"column":0}},{"name":"data","generated":{"line":25,"column":16},"source":"js/helpers.js","original":{"line":20,"column":16}},{"generated":{"line":25,"column":20},"source":"js/helpers.js","original":{"line":20,"column":0}},{"name":"target","generated":{"line":25,"column":22},"source":"js/helpers.js","original":{"line":20,"column":22}},{"generated":{"line":25,"column":28},"source":"js/helpers.js","original":{"line":20,"column":0}},{"name":"templateID","generated":{"line":25,"column":30},"source":"js/helpers.js","original":{"line":20,"column":30}},{"generated":{"line":25,"column":40},"source":"js/helpers.js","original":{"line":20,"column":0}},{"name":"renderFn","generated":{"line":25,"column":42},"source":"js/helpers.js","original":{"line":20,"column":42}},{"generated":{"line":25,"column":50},"source":"js/helpers.js","original":{"line":20,"column":0}},{"generated":{"line":25,"column":52},"source":"js/helpers.js","original":{"line":20,"column":52}},{"generated":{"line":26,"column":0},"source":"js/helpers.js","original":{"line":21,"column":4}},{"name":"template","generated":{"line":26,"column":6},"source":"js/helpers.js","original":{"line":21,"column":10}},{"generated":{"line":26,"column":14},"source":"js/helpers.js","original":{"line":21,"column":18}},{"name":"document","generated":{"line":26,"column":17},"source":"js/helpers.js","original":{"line":21,"column":21}},{"generated":{"line":26,"column":25},"source":"js/helpers.js","original":{"line":21,"column":29}},{"name":"getElementById","generated":{"line":26,"column":26},"source":"js/helpers.js","original":{"line":21,"column":30}},{"generated":{"line":26,"column":40},"source":"js/helpers.js","original":{"line":21,"column":21}},{"name":"templateID","generated":{"line":26,"column":41},"source":"js/helpers.js","original":{"line":21,"column":45}},{"generated":{"line":26,"column":51},"source":"js/helpers.js","original":{"line":21,"column":21}},{"generated":{"line":26,"column":52},"source":"js/helpers.js","original":{"line":21,"column":4}},{"generated":{"line":28,"column":0},"source":"js/helpers.js","original":{"line":22,"column":4}},{"name":"data","generated":{"line":28,"column":6},"source":"js/helpers.js","original":{"line":22,"column":8}},{"generated":{"line":28,"column":10},"source":"js/helpers.js","original":{"line":22,"column":12}},{"name":"constructor","generated":{"line":28,"column":11},"source":"js/helpers.js","original":{"line":22,"column":13}},{"generated":{"line":28,"column":22},"source":"js/helpers.js","original":{"line":22,"column":8}},{"name":"Array","generated":{"line":28,"column":27},"source":"js/helpers.js","original":{"line":22,"column":29}},{"generated":{"line":28,"column":32},"source":"js/helpers.js","original":{"line":22,"column":4}},{"generated":{"line":28,"column":34},"source":"js/helpers.js","original":{"line":22,"column":36}},{"name":"data","generated":{"line":29,"column":0},"source":"js/helpers.js","original":{"line":23,"column":8}},{"name":"data","generated":{"line":29,"column":4},"source":"js/helpers.js","original":{"line":23,"column":8}},{"generated":{"line":29,"column":8},"source":"js/helpers.js","original":{"line":23,"column":12}},{"name":"forEach","generated":{"line":29,"column":9},"source":"js/helpers.js","original":{"line":23,"column":13}},{"generated":{"line":29,"column":16},"source":"js/helpers.js","original":{"line":23,"column":8}},{"generated":{"line":29,"column":17},"source":"js/helpers.js","original":{"line":23,"column":21}},{"name":"el","generated":{"line":29,"column":27},"source":"js/helpers.js","original":{"line":23,"column":21}},{"generated":{"line":29,"column":29},"source":"js/helpers.js","original":{"line":23,"column":23}},{"generated":{"line":29,"column":31},"source":"js/helpers.js","original":{"line":23,"column":27}},{"generated":{"line":30,"column":0},"source":"js/helpers.js","original":{"line":24,"column":12}},{"name":"result","generated":{"line":30,"column":10},"source":"js/helpers.js","original":{"line":24,"column":18}},{"generated":{"line":30,"column":16},"source":"js/helpers.js","original":{"line":24,"column":24}},{"name":"renderFn","generated":{"line":30,"column":19},"source":"js/helpers.js","original":{"line":24,"column":27}},{"generated":{"line":30,"column":27},"source":"js/helpers.js","original":{"line":24,"column":35}},{"name":"el","generated":{"line":30,"column":28},"source":"js/helpers.js","original":{"line":24,"column":36}},{"generated":{"line":30,"column":30},"source":"js/helpers.js","original":{"line":24,"column":35}},{"name":"template","generated":{"line":30,"column":32},"source":"js/helpers.js","original":{"line":24,"column":40}},{"generated":{"line":30,"column":40},"source":"js/helpers.js","original":{"line":24,"column":35}},{"generated":{"line":30,"column":41},"source":"js/helpers.js","original":{"line":24,"column":12}},{"name":"target","generated":{"line":31,"column":0},"source":"js/helpers.js","original":{"line":25,"column":12}},{"name":"target","generated":{"line":31,"column":6},"source":"js/helpers.js","original":{"line":25,"column":12}},{"generated":{"line":31,"column":12},"source":"js/helpers.js","original":{"line":25,"column":18}},{"name":"appendChild","generated":{"line":31,"column":13},"source":"js/helpers.js","original":{"line":25,"column":19}},{"generated":{"line":31,"column":24},"source":"js/helpers.js","original":{"line":25,"column":12}},{"name":"result","generated":{"line":31,"column":25},"source":"js/helpers.js","original":{"line":25,"column":31}},{"generated":{"line":31,"column":31},"source":"js/helpers.js","original":{"line":25,"column":12}},{"generated":{"line":32,"column":0},"source":"js/helpers.js","original":{"line":26,"column":9}},{"generated":{"line":32,"column":5},"source":"js/helpers.js","original":{"line":23,"column":8}},{"generated":{"line":33,"column":0},"source":"js/helpers.js","original":{"line":27,"column":5}},{"generated":{"line":33,"column":3},"source":"js/helpers.js","original":{"line":22,"column":4}},{"generated":{"line":33,"column":9},"source":"js/helpers.js","original":{"line":27,"column":11}},{"generated":{"line":34,"column":0},"source":"js/helpers.js","original":{"line":28,"column":8}},{"name":"result","generated":{"line":34,"column":8},"source":"js/helpers.js","original":{"line":28,"column":14}},{"generated":{"line":34,"column":14},"source":"js/helpers.js","original":{"line":28,"column":20}},{"name":"renderFn","generated":{"line":34,"column":17},"source":"js/helpers.js","original":{"line":28,"column":23}},{"generated":{"line":34,"column":25},"source":"js/helpers.js","original":{"line":28,"column":31}},{"name":"data","generated":{"line":34,"column":26},"source":"js/helpers.js","original":{"line":28,"column":32}},{"generated":{"line":34,"column":30},"source":"js/helpers.js","original":{"line":28,"column":31}},{"name":"template","generated":{"line":34,"column":32},"source":"js/helpers.js","original":{"line":28,"column":38}},{"generated":{"line":34,"column":40},"source":"js/helpers.js","original":{"line":28,"column":31}},{"generated":{"line":34,"column":41},"source":"js/helpers.js","original":{"line":28,"column":8}},{"name":"target","generated":{"line":35,"column":0},"source":"js/helpers.js","original":{"line":29,"column":8}},{"name":"target","generated":{"line":35,"column":4},"source":"js/helpers.js","original":{"line":29,"column":8}},{"generated":{"line":35,"column":10},"source":"js/helpers.js","original":{"line":29,"column":14}},{"name":"appendChild","generated":{"line":35,"column":11},"source":"js/helpers.js","original":{"line":29,"column":15}},{"generated":{"line":35,"column":22},"source":"js/helpers.js","original":{"line":29,"column":8}},{"name":"result","generated":{"line":35,"column":23},"source":"js/helpers.js","original":{"line":29,"column":27}},{"generated":{"line":35,"column":29},"source":"js/helpers.js","original":{"line":29,"column":8}},{"generated":{"line":36,"column":0},"source":"js/helpers.js","original":{"line":30,"column":5}},{"generated":{"line":37,"column":0},"source":"js/helpers.js","original":{"line":31,"column":1}}],"sources":{"js/helpers.js":"'use strict'\n\n/**\n * Render function that renders data specified in the param\n * to the given target node. A templateID corresponding to\n * the appearance of the dom node should be passed as well as\n * an individual render function that renders an individual node.\n * \n * @param {Array} data array of elements to render\n * @param {Node} target target node to append the results to\n * @param {String} templateID the id of the template to pass\n *                            to individual render function\n * @param {Function} renderFn callback function. Given:\n *                          - Data element\n *                          - HTML template\n *                          Should return the finished DOM node\n *                          populated by the data defined in the\n *                          data element.\n */\nfunction render(data, target, templateID, renderFn) {\n    const template = document.getElementById(templateID);\n    if (data.constructor === Array) {\n        data.forEach(el => {\n            const result = renderFn(el, template);\n            target.appendChild(result);\n        });\n    } else {\n        const result = renderFn(data, template);\n        target.appendChild(result);\n    }\n}\n\nexport { render };"},"lineCount":null}},"hash":"a7775364b114cd616fd38e6f2a2dfcce","cacheData":{"env":{}}}